/*
 * This file is generated by jOOQ.
 */
package jooq.steve.db.tables;


import de.rwth.idsg.steve.utils.DateTimeConverter;

import jooq.steve.db.Stevedb;
import jooq.steve.db.tables.records.OcppTagActivityRecord;

import org.joda.time.DateTime;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OcppTagActivity extends TableImpl<OcppTagActivityRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>stevedb.ocpp_tag_activity</code>
     */
    public static final OcppTagActivity OCPP_TAG_ACTIVITY = new OcppTagActivity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OcppTagActivityRecord> getRecordType() {
        return OcppTagActivityRecord.class;
    }

    /**
     * The column <code>stevedb.ocpp_tag_activity.id_tag</code>.
     */
    public final TableField<OcppTagActivityRecord, String> ID_TAG = createField(DSL.name("id_tag"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>stevedb.ocpp_tag_activity.parent_id_tag</code>.
     */
    public final TableField<OcppTagActivityRecord, String> PARENT_ID_TAG = createField(DSL.name("parent_id_tag"), SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>stevedb.ocpp_tag_activity.expiry_date</code>.
     */
    public final TableField<OcppTagActivityRecord, DateTime> EXPIRY_DATE = createField(DSL.name("expiry_date"), SQLDataType.TIMESTAMP(6), this, "", new DateTimeConverter());

    /**
     * The column <code>stevedb.ocpp_tag_activity.note</code>.
     */
    public final TableField<OcppTagActivityRecord, String> NOTE = createField(DSL.name("note"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>stevedb.ocpp_tag_activity.ocpp_tag_pk</code>.
     */
    public final TableField<OcppTagActivityRecord, Integer> OCPP_TAG_PK = createField(DSL.name("ocpp_tag_pk"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>stevedb.ocpp_tag_activity.max_active_transaction_count</code>.
     */
    public final TableField<OcppTagActivityRecord, Integer> MAX_ACTIVE_TRANSACTION_COUNT = createField(DSL.name("max_active_transaction_count"), SQLDataType.INTEGER, this, "");

    /**
     * The column
     * <code>stevedb.ocpp_tag_activity.active_transaction_count</code>.
     */
    public final TableField<OcppTagActivityRecord, Long> ACTIVE_TRANSACTION_COUNT = createField(DSL.name("active_transaction_count"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>stevedb.ocpp_tag_activity.in_transaction</code>.
     */
    public final TableField<OcppTagActivityRecord, Boolean> IN_TRANSACTION = createField(DSL.name("in_transaction"), SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>stevedb.ocpp_tag_activity.blocked</code>.
     */
    public final TableField<OcppTagActivityRecord, Boolean> BLOCKED = createField(DSL.name("blocked"), SQLDataType.BOOLEAN, this, "");

    private OcppTagActivity(Name alias, Table<OcppTagActivityRecord> aliased) {
        this(alias, aliased, null);
    }

    private OcppTagActivity(Name alias, Table<OcppTagActivityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.view("create view \"ocpp_tag_activity\" as  SELECT ocpp_tag.id_tag,\n    ocpp_tag.parent_id_tag,\n    ocpp_tag.expiry_date,\n    ocpp_tag.note,\n    ocpp_tag.ocpp_tag_pk,\n    ocpp_tag.max_active_transaction_count,\n    COALESCE(tx_activity.active_transaction_count, (0)::bigint) AS active_transaction_count,\n        CASE\n            WHEN (tx_activity.active_transaction_count > 0) THEN true\n            ELSE false\n        END AS in_transaction,\n        CASE\n            WHEN (ocpp_tag.max_active_transaction_count = 0) THEN true\n            ELSE false\n        END AS blocked\n   FROM (stevedb.ocpp_tag\n     LEFT JOIN ( SELECT transaction.id_tag,\n            count(transaction.id_tag) AS active_transaction_count\n           FROM stevedb.transaction\n          WHERE ((transaction.stop_timestamp IS NULL) AND (transaction.stop_value IS NULL))\n          GROUP BY transaction.id_tag) tx_activity ON (((ocpp_tag.id_tag)::text = (tx_activity.id_tag)::text)));"));
    }

    /**
     * Create an aliased <code>stevedb.ocpp_tag_activity</code> table reference
     */
    public OcppTagActivity(String alias) {
        this(DSL.name(alias), OCPP_TAG_ACTIVITY);
    }

    /**
     * Create an aliased <code>stevedb.ocpp_tag_activity</code> table reference
     */
    public OcppTagActivity(Name alias) {
        this(alias, OCPP_TAG_ACTIVITY);
    }

    /**
     * Create a <code>stevedb.ocpp_tag_activity</code> table reference
     */
    public OcppTagActivity() {
        this(DSL.name("ocpp_tag_activity"), null);
    }

    public <O extends Record> OcppTagActivity(Table<O> child, ForeignKey<O, OcppTagActivityRecord> key) {
        super(child, key, OCPP_TAG_ACTIVITY);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Stevedb.STEVEDB;
    }

    @Override
    public OcppTagActivity as(String alias) {
        return new OcppTagActivity(DSL.name(alias), this);
    }

    @Override
    public OcppTagActivity as(Name alias) {
        return new OcppTagActivity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OcppTagActivity rename(String name) {
        return new OcppTagActivity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OcppTagActivity rename(Name name) {
        return new OcppTagActivity(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<String, String, DateTime, String, Integer, Integer, Long, Boolean, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}
